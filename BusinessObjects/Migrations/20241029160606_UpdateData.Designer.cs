// <auto-generated />
using System;
using BusinessObjects.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObjects.Migrations
{
    [DbContext(typeof(CeliciousContext))]
    [Migration("20241029160606_UpdateData")]
    partial class UpdateData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObjects.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Account", (string)null);

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            Email = "admin@gmail.com",
                            Password = "AQAAAAIAAYagAAAAEA8f28EWjuoPHJCJ6ggrp2CpieVcHbFUN1saVkV6p/89/5zCwmmIfDtxT8rI96tdBw==",
                            Role = 0,
                            Status = 0,
                            UserId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            Email = "user@gmail.com",
                            Password = "AQAAAAIAAYagAAAAEILUAtMXHmLPHEbz+CxKaawhFqdz6A2qKqXfK+4GECdpFM8gl7hin+D3/MrfLGELBQ==",
                            Role = 1,
                            Status = 0,
                            UserId = 2
                        },
                        new
                        {
                            AccountId = 3,
                            Email = "owner@gmail.com",
                            Password = "AQAAAAIAAYagAAAAEA8f28EWjuoPHJCJ6ggrp2CpieVcHbFUN1saVkV6p/89/5zCwmmIfDtxT8rI96tdBw==",
                            Role = 2,
                            Status = 0,
                            UserId = 3
                        },
                        new
                        {
                            AccountId = 4,
                            Email = "guest@gmail.com",
                            Password = "AQAAAAIAAYagAAAAEA8f28EWjuoPHJCJ6ggrp2CpieVcHbFUN1saVkV6p/89/5zCwmmIfDtxT8rI96tdBw==",
                            Role = 1,
                            Status = 2,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DishId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DishCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkToShoppe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("DishId");

                    b.HasIndex("DishCategoryId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Dish", (string)null);

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            Description = "Crispy rolls with vegetables",
                            DishCategoryId = 1,
                            DishName = "Spring Rolls",
                            Image = "https://example.com/images/spring-rolls.jpg",
                            LinkToShoppe = "https://example.com/shoppe/spring-rolls",
                            Price = 5.9900000000000002,
                            RestaurantId = 1
                        },
                        new
                        {
                            DishId = 2,
                            Description = "Juicy grilled chicken with herbs",
                            DishCategoryId = 1,
                            DishName = "Grilled Chicken",
                            Image = "https://example.com/images/grilled-chicken.jpg",
                            LinkToShoppe = "https://example.com/shoppe/grilled-chicken",
                            Price = 12.99,
                            RestaurantId = 1
                        },
                        new
                        {
                            DishId = 3,
                            Description = "Rich chocolate cake with a creamy filling",
                            DishCategoryId = 3,
                            DishName = "Chocolate Cake",
                            Image = "https://example.com/images/chocolate-cake.jpg",
                            LinkToShoppe = "https://example.com/shoppe/chocolate-cake",
                            Price = 7.4900000000000002,
                            RestaurantId = 2
                        },
                        new
                        {
                            DishId = 4,
                            Description = "Refreshing green tea with mint",
                            DishCategoryId = 4,
                            DishName = "Green Tea",
                            Image = "https://example.com/images/green-tea.jpg",
                            LinkToShoppe = "https://example.com/shoppe/green-tea",
                            Price = 2.9900000000000002,
                            RestaurantId = 3
                        },
                        new
                        {
                            DishId = 5,
                            Description = "Classic Caesar salad with crisp lettuce and Parmesan cheese",
                            DishCategoryId = 5,
                            DishName = "Caesar Salad",
                            Image = "https://example.com/images/caesar-salad.jpg",
                            LinkToShoppe = "https://example.com/shoppe/caesar-salad",
                            Price = 6.4900000000000002,
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.DishCategory", b =>
                {
                    b.Property<int>("DishCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DishCategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DishCategoryId");

                    b.ToTable("DishCategory", (string)null);

                    b.HasData(
                        new
                        {
                            DishCategoryId = 1,
                            Name = "Appetizers"
                        },
                        new
                        {
                            DishCategoryId = 2,
                            Name = "Main Courses"
                        },
                        new
                        {
                            DishCategoryId = 3,
                            Name = "Desserts"
                        },
                        new
                        {
                            DishCategoryId = 4,
                            Name = "Beverages"
                        },
                        new
                        {
                            DishCategoryId = 5,
                            Name = "Salads"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.DishImage", b =>
                {
                    b.Property<int>("DishImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DishImageID"));

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DishImageID");

                    b.HasIndex("DishId");

                    b.ToTable("DishImages");

                    b.HasData(
                        new
                        {
                            DishImageID = 1,
                            DishId = 1,
                            ImagePath = "/images/homepage/meals/img-1.jpg"
                        },
                        new
                        {
                            DishImageID = 2,
                            DishId = 1,
                            ImagePath = "/images/homepage/meals/img-3.jpg"
                        },
                        new
                        {
                            DishImageID = 3,
                            DishId = 1,
                            ImagePath = "/images/homepage/meals/img-1.jpg"
                        },
                        new
                        {
                            DishImageID = 4,
                            DishId = 2,
                            ImagePath = "/images/homepage/meals/img-2.jpg"
                        },
                        new
                        {
                            DishImageID = 5,
                            DishId = 2,
                            ImagePath = "/images/homepage/meals/img-1.jpg"
                        },
                        new
                        {
                            DishImageID = 6,
                            DishId = 2,
                            ImagePath = "/images/homepage/meals/img-3.jpg"
                        },
                        new
                        {
                            DishImageID = 7,
                            DishId = 3,
                            ImagePath = "/images/homepage/meals/img-2.jpg"
                        },
                        new
                        {
                            DishImageID = 8,
                            DishId = 3,
                            ImagePath = "/images/homepage/meals/img-1.jpg"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"));

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantId");

                    b.HasIndex("RestaurantAddressId");

                    b.HasIndex("RestaurantCategoryId");

                    b.ToTable("Restaurant", (string)null);

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            Background = "/images/homepage/meals/img-1.jpg",
                            Description = "Quan an ngon",
                            EndTime = new TimeOnly(20, 0, 0),
                            Logo = "/images/homepage/meals/logo-1.jpg",
                            Phone = "0572857285",
                            RestaurantAddressId = 1,
                            RestaurantCategoryId = 2,
                            RestaurantName = "Nha Hang Sanh Loc",
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0,
                            UserId = 1
                        },
                        new
                        {
                            RestaurantId = 2,
                            Background = "/images/homepage/meals/img-2.jpg",
                            Description = "crunch",
                            EndTime = new TimeOnly(21, 0, 0),
                            Logo = "/images/homepage/meals/logo-2.jpg",
                            Phone = "0576938761",
                            RestaurantAddressId = 2,
                            RestaurantCategoryId = 1,
                            RestaurantName = "Ga Ran Five Start",
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            RestaurantId = 3,
                            Background = "/images/homepage/meals/img-3.jpg",
                            Description = "Banh pizza",
                            EndTime = new TimeOnly(22, 0, 0),
                            Logo = "/images/homepage/meals/logo-3.jpg",
                            Phone = "0395684691",
                            RestaurantAddressId = 3,
                            RestaurantCategoryId = 4,
                            RestaurantName = "Domino Pizza",
                            StartTime = new TimeOnly(9, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            RestaurantId = 4,
                            Background = "/images/homepage/meals/img-4.jpg",
                            Description = "Com me nau",
                            EndTime = new TimeOnly(23, 0, 0),
                            Logo = "/images/homepage/meals/logo-4.jpg",
                            Phone = "0923487318",
                            RestaurantAddressId = 4,
                            RestaurantCategoryId = 3,
                            RestaurantName = "Chu Lun",
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            RestaurantId = 5,
                            Background = "/images/homepage/meals/img-5.jpg",
                            Description = "Com bo nau",
                            EndTime = new TimeOnly(22, 0, 0),
                            Logo = "/images/homepage/meals/logo-5.jpg",
                            Phone = "0924783451",
                            RestaurantAddressId = 5,
                            RestaurantCategoryId = 1,
                            RestaurantName = "Com Nong",
                            StartTime = new TimeOnly(6, 0, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.RestaurantAddress", b =>
                {
                    b.Property<int>("RestaurantAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantAddressId"));

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleMapLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantAddressId");

                    b.ToTable("RestaurantAddress", (string)null);

                    b.HasData(
                        new
                        {
                            RestaurantAddressId = 1,
                            District = "An Hoa",
                            GoogleMapLink = "https://maps.app.goo.gl/DaB7fy8yHryDc77P8",
                            HouseNumber = "43A",
                            Province = "Can Tho",
                            Street = "Nguyen Van Cu"
                        },
                        new
                        {
                            RestaurantAddressId = 2,
                            District = "An Binh",
                            GoogleMapLink = "https://maps.app.goo.gl/etrpPa5GXwg31uem7",
                            HouseNumber = "22B",
                            Province = "An Giang",
                            Street = "Vo Van Kiet"
                        },
                        new
                        {
                            RestaurantAddressId = 3,
                            District = "An Cu",
                            GoogleMapLink = "https://maps.app.goo.gl/W78UiYcpagZo1yGQ9",
                            HouseNumber = "54B",
                            Province = "Can Tho",
                            Street = "Hoang Hoa Tham"
                        },
                        new
                        {
                            RestaurantAddressId = 4,
                            District = "An Binh",
                            GoogleMapLink = "https://maps.app.goo.gl/scbsaM31xNhDT3od8",
                            HouseNumber = "890NH",
                            Province = "Ho Chi Minh",
                            Street = "Dien Bien Phu"
                        },
                        new
                        {
                            RestaurantAddressId = 5,
                            District = "An Thoi",
                            GoogleMapLink = "https://maps.app.goo.gl/e69hrTDrDkMkqkUa9",
                            HouseNumber = "53U",
                            Province = "Soc Trang",
                            Street = "Vo Van Linh"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.RestaurantCategory", b =>
                {
                    b.Property<int>("RestaurantCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantCategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantCategoryId");

                    b.ToTable("RestaurantCategory", (string)null);

                    b.HasData(
                        new
                        {
                            RestaurantCategoryId = 1,
                            Name = "Food"
                        },
                        new
                        {
                            RestaurantCategoryId = 2,
                            Name = "Drink"
                        },
                        new
                        {
                            RestaurantCategoryId = 3,
                            Name = "Sweet"
                        },
                        new
                        {
                            RestaurantCategoryId = 4,
                            Name = "Fast Food"
                        },
                        new
                        {
                            RestaurantCategoryId = 5,
                            Name = "Vegitarien"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.RestaurantImage", b =>
                {
                    b.Property<int>("ResImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResImageID"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("ResImageID");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantImages");

                    b.HasData(
                        new
                        {
                            ResImageID = 1,
                            ImagePath = "/images/homepage/meals/logo-1.jpg",
                            RestaurantId = 1
                        },
                        new
                        {
                            ResImageID = 2,
                            ImagePath = "/images/homepage/meals/logo-2.jpg",
                            RestaurantId = 1
                        },
                        new
                        {
                            ResImageID = 3,
                            ImagePath = "/images/homepage/meals/logo-3.jpg",
                            RestaurantId = 1
                        },
                        new
                        {
                            ResImageID = 4,
                            ImagePath = "/images/homepage/meals/logo-4.jpg",
                            RestaurantId = 2
                        },
                        new
                        {
                            ResImageID = 5,
                            ImagePath = "/images/homepage/meals/logo-5.jpg",
                            RestaurantId = 2
                        },
                        new
                        {
                            ResImageID = 6,
                            ImagePath = "/images/homepage/meals/logo-6.jpg",
                            RestaurantId = 2
                        },
                        new
                        {
                            ResImageID = 7,
                            ImagePath = "/images/homepage/meals/logo-7.jpg",
                            RestaurantId = 3
                        },
                        new
                        {
                            ResImageID = 8,
                            ImagePath = "/images/homepage/meals/logo-8.jpg",
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("UserId");

                    b.ToTable("Review", (string)null);

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            CreateTime = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The food was amazing. Will visit again.",
                            Image = "https://example.com/image1.jpg",
                            Rating = 4.5f,
                            RestaurantId = 1,
                            UserId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            CreateTime = new DateTime(2024, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Friendly staff and great service.",
                            Image = "https://example.com/image2.jpg",
                            Rating = 4f,
                            RestaurantId = 2,
                            UserId = 2
                        },
                        new
                        {
                            ReviewId = 3,
                            CreateTime = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The pizza was really delicious and well made.",
                            Image = "https://example.com/image3.jpg",
                            Rating = 5f,
                            RestaurantId = 3,
                            UserId = 3
                        },
                        new
                        {
                            ReviewId = 4,
                            CreateTime = new DateTime(2024, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Food was okay, but the service needs improvement.",
                            Image = "https://example.com/image4.jpg",
                            Rating = 3f,
                            RestaurantId = 4,
                            UserId = 4
                        },
                        new
                        {
                            ReviewId = 5,
                            CreateTime = new DateTime(2024, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Everything was perfect, highly recommended.",
                            Image = "https://example.com/image5.jpg",
                            Rating = 5f,
                            RestaurantId = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Phone")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RestaurantId")
                        .IsUnique()
                        .HasFilter("[RestaurantId] IS NOT NULL");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "123 Nguyen Van Cu, Can Tho",
                            Avatar = "https://example.com/avatar1.jpg",
                            CreateDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Nguyen Van A",
                            Gender = "Male",
                            Phone = 123456789
                        },
                        new
                        {
                            UserId = 2,
                            Address = "456 Vo Van Kiet, An Giang",
                            Avatar = "https://example.com/avatar2.jpg",
                            CreateDate = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Tran Thi B",
                            Gender = "Female",
                            Phone = 987654321
                        },
                        new
                        {
                            UserId = 3,
                            Address = "789 Hoang Hoa Tham, Can Tho",
                            Avatar = "https://example.com/avatar3.jpg",
                            CreateDate = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Le Van C",
                            Gender = "Male",
                            Phone = 112233445,
                            RestaurantId = 1
                        },
                        new
                        {
                            UserId = 4,
                            Address = "101 Dien Bien Phu, Ho Chi Minh",
                            Avatar = "https://example.com/avatar4.jpg",
                            CreateDate = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Phan Thi D",
                            Gender = "Female",
                            Phone = 556677889
                        },
                        new
                        {
                            UserId = 5,
                            Address = "202 Vo Van Linh, Soc Trang",
                            Avatar = "https://example.com/avatar5.jpg",
                            CreateDate = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hoang Van E",
                            Gender = "Male",
                            Phone = 667788990
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Account", b =>
                {
                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("BusinessObjects.Models.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.Dish", b =>
                {
                    b.HasOne("BusinessObjects.Models.DishCategory", "DishCategory")
                        .WithMany("Dishes")
                        .HasForeignKey("DishCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.Restaurant", "Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DishCategory");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("BusinessObjects.Models.DishImage", b =>
                {
                    b.HasOne("BusinessObjects.Models.Dish", null)
                        .WithMany("DishImages")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusinessObjects.Models.Restaurant", b =>
                {
                    b.HasOne("BusinessObjects.Models.RestaurantAddress", "RestaurantAddress")
                        .WithMany("Restaurants")
                        .HasForeignKey("RestaurantAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.RestaurantCategory", "RestaurantCategory")
                        .WithMany("Restaurants")
                        .HasForeignKey("RestaurantCategoryId");

                    b.Navigation("RestaurantAddress");

                    b.Navigation("RestaurantCategory");
                });

            modelBuilder.Entity("BusinessObjects.Models.RestaurantImage", b =>
                {
                    b.HasOne("BusinessObjects.Models.Restaurant", "Restaurant")
                        .WithMany("RestaurantImages")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("BusinessObjects.Models.Review", b =>
                {
                    b.HasOne("BusinessObjects.Models.Restaurant", "Restaurant")
                        .WithMany("Review")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.HasOne("BusinessObjects.Models.Restaurant", "Restaurant")
                        .WithOne("Owner")
                        .HasForeignKey("BusinessObjects.Models.User", "RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("BusinessObjects.Models.Dish", b =>
                {
                    b.Navigation("DishImages");
                });

            modelBuilder.Entity("BusinessObjects.Models.DishCategory", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("BusinessObjects.Models.Restaurant", b =>
                {
                    b.Navigation("Dishes");

                    b.Navigation("Owner");

                    b.Navigation("RestaurantImages");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("BusinessObjects.Models.RestaurantAddress", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("BusinessObjects.Models.RestaurantCategory", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
